# Generated by Django 2.2.12 on 2020-05-17 17:20

import address.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("address", "0002_auto_20160213_1726"),
    ]

    operations = [
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("slug", models.SlugField(default=None, null=True, unique=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="You must include the full URL including https:// or http://",
                    ),
                ),
                (
                    "facebook",
                    models.URLField(
                        blank=True,
                        help_text="You must include the full URL including https:// or http://",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Balance chapter owes.",
                        max_digits=7,
                    ),
                ),
                ("balance_date", models.DateField(auto_now_add=True)),
                (
                    "tax",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Tax number, if chapter participates in group exemption.",
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "greek",
                    models.CharField(
                        blank=True, help_text="Greek letter abbreviation", max_length=10
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("colony", models.BooleanField(default=False)),
                ("school", models.CharField(blank=True, max_length=50, unique=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=16, max_digits=22, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=16, max_digits=22, null=True
                    ),
                ),
                (
                    "school_type",
                    models.CharField(
                        choices=[("semester", "Semester"), ("quarter", "Quarter")],
                        default="semester",
                        max_length=10,
                    ),
                ),
                (
                    "council",
                    models.CharField(
                        default="none",
                        help_text="The name of the council of which your Chapter is a member, for example the IFC or PFC.  Please write 'none' if you are not recognized as a Fraternity or not a member of a council.",
                        max_length=55,
                        verbose_name="Name of Council",
                    ),
                ),
                (
                    "recognition",
                    models.CharField(
                        choices=[
                            ("fraternity", "Recognized as a Fraternity"),
                            (
                                "org",
                                "Recognized as a Student Organization NOT a Fraternity",
                            ),
                            (
                                "other",
                                "Recognized but not as a Fraternity or Student Organization",
                            ),
                            ("not_rec", "Not Recognized by University"),
                        ],
                        default="not_rec",
                        help_text="Please indicate if your chapter is recognized by your host college or university.",
                        max_length=10,
                        verbose_name="University Recognition",
                    ),
                ),
                (
                    "address",
                    address.models.AddressField(
                        blank=True,
                        help_text="We periodically need to mail things (shingles, badges, etc) to your chapter.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="address.Address",
                        unique=True,
                        verbose_name="Mailing Address",
                    ),
                ),
            ],
            options={"ordering": ["name"],},
        ),
        migrations.CreateModel(
            name="ChapterCurricula",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("major", models.CharField(max_length=100)),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="curricula",
                        to="chapters.Chapter",
                    ),
                ),
            ],
        ),
    ]
