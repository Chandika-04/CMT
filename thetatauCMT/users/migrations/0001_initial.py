# Generated by Django 2.2.12 on 2020-05-17 17:20

import address.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("address", "0002_auto_20160213_1726"),
        ("auth", "0011_update_proxy_permissions"),
        ("chapters", "0002_chapter_region"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Member Name"
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
                ("badge_number", models.PositiveIntegerField(default=999999999)),
                (
                    "title",
                    models.CharField(blank=True, max_length=255, verbose_name="Title"),
                ),
                (
                    "user_id",
                    models.CharField(
                        help_text="Combination of badge number and chapter abbr, eg. X1311",
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("major", models.CharField(blank=True, max_length=100)),
                ("employer", models.CharField(blank=True, max_length=100)),
                ("employer_position", models.CharField(blank=True, max_length=100)),
                (
                    "graduation_year",
                    models.PositiveIntegerField(
                        default=2020,
                        help_text="Use the following format: YYYY",
                        validators=[
                            django.core.validators.MinValueValidator(1950),
                            django.core.validators.MaxValueValidator(2030),
                        ],
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Format: 9999999999 no spaces, dashes, etc.",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "address",
                    address.models.AddressField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="address.Address",
                        unique=True,
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="chapters.Chapter",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ["last_name"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserStatusChange",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("start", models.DateField(verbose_name="Start Date")),
                ("end", models.DateField(verbose_name="End Date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("alumni", "alumni"),
                            ("alumnipend", "alumni pending"),
                            ("active", "active"),
                            ("activepend", "active pending"),
                            ("pnm", "prospective"),
                            ("away", "away"),
                            ("depledge", "depledge"),
                            ("advisor", "advisor"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSemesterServiceHours",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        choices=[
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                            (2025, 2025),
                            (2026, 2026),
                            (2027, 2027),
                        ],
                        default=2020,
                    ),
                ),
                (
                    "term",
                    models.CharField(
                        choices=[
                            ("fa", "Fall"),
                            ("sp", "Spring"),
                            ("wi", "Winter"),
                            ("su", "Summer"),
                        ],
                        max_length=2,
                    ),
                ),
                ("service_hours", models.FloatField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_hours",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSemesterGPA",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        choices=[
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                            (2024, 2024),
                            (2025, 2025),
                            (2026, 2026),
                            (2027, 2027),
                        ],
                        default=2020,
                    ),
                ),
                (
                    "term",
                    models.CharField(
                        choices=[
                            ("fa", "Fall"),
                            ("sp", "Spring"),
                            ("wi", "Winter"),
                            ("su", "Summer"),
                        ],
                        max_length=2,
                    ),
                ),
                ("gpa", models.FloatField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gpas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserRoleChange",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("start", models.DateField(verbose_name="Start Date")),
                ("end", models.DateField(verbose_name="End Date")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("adviser", "Adviser"),
                            ("alumni programs director", "Alumni Programs Director"),
                            ("board member", "Board Member"),
                            ("colony director", "Colony Director"),
                            ("committee chair", "Committee Chair"),
                            ("corresponding secretary", "Corresponding Secretary"),
                            ("council delegate", "Council Delegate"),
                            ("employer/ee", "Employer/Ee"),
                            ("events chair", "Events Chair"),
                            ("expansion director", "Expansion Director"),
                            ("faculty adviser", "Faculty Adviser"),
                            ("fundraising chair", "Fundraising Chair"),
                            ("grand inner guard", "Grand Inner Guard"),
                            ("grand marshal", "Grand Marshal"),
                            ("grand outer guard", "Grand Outer Guard"),
                            ("grand regent", "Grand Regent"),
                            ("grand scribe", "Grand Scribe"),
                            ("grand treasurer", "Grand Treasurer"),
                            ("grand vice regent", "Grand Vice Regent"),
                            (
                                "house corporation president",
                                "House Corporation President",
                            ),
                            (
                                "house corporation treasurer",
                                "House Corporation Treasurer",
                            ),
                            ("housing chair", "Housing Chair"),
                            ("national director", "National Director"),
                            ("national officer", "National Officer"),
                            (
                                "national operations manager",
                                "National Operations Manager",
                            ),
                            ("other appointee", "Other Appointee"),
                            ("parent", "Parent"),
                            ("pd chair", "Pd Chair"),
                            (
                                "pledge/new member educator",
                                "Pledge/New Member Educator",
                            ),
                            (
                                "professional development director",
                                "Professional Development Director",
                            ),
                            ("project chair", "Project Chair"),
                            ("recruitment chair", "Recruitment Chair"),
                            ("regent", "Regent"),
                            ("regional director", "Regional Director"),
                            ("risk management chair", "Risk Management Chair"),
                            ("rube goldberg chair", "Rube Goldberg Chair"),
                            ("scholarship chair", "Scholarship Chair"),
                            ("scribe", "Scribe"),
                            ("service chair", "Service Chair"),
                            ("service director", "Service Director"),
                            ("social/brotherhood chair", "Social/Brotherhood Chair"),
                            ("treasurer", "Treasurer"),
                            ("vice regent", "Vice Regent"),
                            (
                                "website/social media chair",
                                "Website/Social Media Chair",
                            ),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserOrgParticipate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start", models.DateField(verbose_name="Start Date")),
                ("end", models.DateField(verbose_name="End Date")),
                ("org_name", models.CharField(max_length=50)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("pro", "Professional"),
                            ("tec", "Technical"),
                            ("hon", "Honor"),
                            ("oth", "Other"),
                        ],
                        max_length=3,
                    ),
                ),
                ("officer", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orgs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserAlter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("corresponding secretary", "Corresponding Secretary"),
                            ("regent", "Regent"),
                            ("scribe", "Scribe"),
                            ("treasurer", "Treasurer"),
                            ("vice regent", "Vice Regent"),
                            (None, "------------"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="altered_member",
                        to="chapters.Chapter",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="altered",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
