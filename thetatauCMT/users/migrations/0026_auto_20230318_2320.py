# Generated by Django 3.2.15 on 2023-03-19 06:20

import address.models
import core.models
import datetime
from django.conf import settings
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ("address", "0003_auto_20200830_1851"),
        ("chapters", "0012_auto_20220820_1812"),
        ("users", "0025_auto_20230117_1806"),
    ]

    operations = [
        migrations.AlterField(
            model_name="userrolechange",
            name="role",
            field=models.CharField(
                choices=[
                    ("adviser", "Adviser"),
                    ("alumni programs director", "Alumni Programs Director"),
                    ("board member", "Board Member"),
                    ("candidate chapter director", "Candidate Chapter Director"),
                    ("committee chair", "Committee Chair"),
                    ("corresponding secretary", "Corresponding Secretary"),
                    ("council delegate", "Council Delegate"),
                    (
                        "diversity, equity, and inclusion chair",
                        "Diversity, Equity, And Inclusion Chair",
                    ),
                    (
                        "educational foundation board of director",
                        "Educational Foundation Board Of Director",
                    ),
                    ("employer/ee", "Employer/Ee"),
                    ("events chair", "Events Chair"),
                    ("expansion director", "Expansion Director"),
                    ("faculty adviser", "Faculty Adviser"),
                    ("fundraising chair", "Fundraising Chair"),
                    ("grand inner guard", "Grand Inner Guard"),
                    ("grand marshal", "Grand Marshal"),
                    ("grand outer guard", "Grand Outer Guard"),
                    ("grand regent", "Grand Regent"),
                    ("grand scribe", "Grand Scribe"),
                    ("grand treasurer", "Grand Treasurer"),
                    ("grand vice regent", "Grand Vice Regent"),
                    ("house corporation president", "House Corporation President"),
                    ("house corporation treasurer", "House Corporation Treasurer"),
                    ("housing chair", "Housing Chair"),
                    ("marshal", "Marshal"),
                    ("national director", "National Director"),
                    ("national officer", "National Officer"),
                    ("national operations manager", "National Operations Manager"),
                    ("other appointee", "Other Appointee"),
                    ("parent", "Parent"),
                    ("pd chair", "Pd Chair"),
                    ("pledge/new member educator", "Pledge/New Member Educator"),
                    (
                        "professional development director",
                        "Professional Development Director",
                    ),
                    ("project chair", "Project Chair"),
                    ("recruitment chair", "Recruitment Chair"),
                    ("regent", "Regent"),
                    ("regional director", "Regional Director"),
                    ("risk management chair", "Risk Management Chair"),
                    ("rube goldberg chair", "Rube Goldberg Chair"),
                    ("scholarship chair", "Scholarship Chair"),
                    ("scribe", "Scribe"),
                    ("service chair", "Service Chair"),
                    ("service director", "Service Director"),
                    ("social/brotherhood chair", "Social/Brotherhood Chair"),
                    ("treasurer", "Treasurer"),
                    ("vice regent", "Vice Regent"),
                    ("website/social media chair", "Website/Social Media Chair"),
                ],
                max_length=50,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalUser",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Member Name"
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="Full Middle Name"
                    ),
                ),
                (
                    "maiden_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Maiden Name"
                    ),
                ),
                (
                    "suffix",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Suffix (such as Jr., III)",
                    ),
                ),
                (
                    "preferred_name",
                    models.CharField(
                        blank=True,
                        help_text="Prefered First Name - eg my first name is Kevin but I go by my middle name Henry.",
                        max_length=255,
                        null=True,
                        verbose_name="Preferred Name",
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True,
                        help_text="Other than first name and preferred first name - eg Bud, Skip, Frank The Tank, Etc. Do NOT indicate 'pledge names'",
                        max_length=30,
                    ),
                ),
                (
                    "email_school",
                    models.EmailField(
                        blank=True,
                        help_text="We will send an acknowledgement message. (ends in .edu)",
                        max_length=254,
                        verbose_name="School Email",
                    ),
                ),
                ("modified", models.DateTimeField(blank=True, editable=False)),
                ("badge_number", models.PositiveIntegerField(default=999999999)),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mr", "Mr."),
                            ("miss", "Miss"),
                            ("ms", "Ms"),
                            ("mrs", "Mrs"),
                            ("mx", "Mx"),
                            ("none", ""),
                        ],
                        max_length=5,
                        verbose_name="Title",
                    ),
                ),
                (
                    "degree",
                    models.CharField(
                        choices=[
                            ("bs", "Bachelor of Science"),
                            ("ms", "Master of Science"),
                            ("mba", "Master of Business Administration"),
                            ("phd", "Doctor of Philosophy"),
                            ("ba", "Bachelor of Arts"),
                            ("ma", "Master of Arts"),
                            ("me", "Master of Engineering"),
                            ("none", "None"),
                        ],
                        default="bs",
                        max_length=4,
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        db_index=True,
                        help_text="Combination of badge number and chapter abbr, eg. X1311",
                        max_length=20,
                    ),
                ),
                ("employer", models.CharField(blank=True, max_length=100)),
                (
                    "employer_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="employer"
                    ),
                ),
                (
                    "employer_position",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                (
                    "emergency_first_name",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Emergency Contact first name",
                    ),
                ),
                (
                    "emergency_middle_name",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Emergency Contact Middle Name",
                    ),
                ),
                (
                    "emergency_last_name",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Emergency Contact last name",
                    ),
                ),
                (
                    "emergency_nickname",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Emergency Contact nickname name",
                    ),
                ),
                (
                    "emergency_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Format: 9999999999 no spaces, dashes, etc.",
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "emergency_relation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("parent", "Parent"),
                            ("guardian", "Guardian"),
                            ("grandparent", "Grandparent"),
                            ("partner", "Spouse/Partner"),
                            ("sibling", "Sibling (over 18)"),
                            ("other", "Other relative"),
                            ("friend", "Friend"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "graduation_year",
                    models.PositiveIntegerField(
                        default=core.models.current_year,
                        help_text="Use the following format: YYYY",
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(
                                core.models.current_year_plus_10
                            ),
                        ],
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Format: 9999999999 no spaces, dashes, etc.",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("birth_date", models.DateField(default=datetime.date(1904, 10, 15))),
                (
                    "address_changed",
                    model_utils.fields.MonitorField(
                        default=django.utils.timezone.now, monitor="address"
                    ),
                ),
                ("deceased", models.BooleanField(default=False)),
                (
                    "deceased_changed",
                    model_utils.fields.MonitorField(
                        default=core.models.forever, monitor="deceased"
                    ),
                ),
                ("deceased_date", models.DateField(blank=True, null=True)),
                ("no_contact", models.BooleanField(default=False)),
                (
                    "charter",
                    models.BooleanField(default=False, help_text="Charter member"),
                ),
                ("current_status", models.CharField(max_length=10)),
                (
                    "current_roles",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                ("officer", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "address",
                    address.models.AddressField(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="address.address",
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="chapters.chapter",
                    ),
                ),
                (
                    "employer_address",
                    address.models.AddressField(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="address.address",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "major",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="chapters.chaptercurricula",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical user",
                "verbose_name_plural": "historical users",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
